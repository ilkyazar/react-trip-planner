{"version":3,"sources":["context/AppContext.js","context/AppReducer.js","context/AppProvider.js","components/header/Header.js","components/budget/EditBudget.js","components/budget/Budget.js","utils/StoreUtils.js","components/city/City.js","components/budget-status/BudgetStatus.js","components/city-list/CityList.js","components/home/Home.js","components/trip-card/TripCard.js","components/trip-city-gallery/TripCityGallery.js","utils/PlanUtils.js","components/trip-plan/TripPlan.js","components/plan-view/PlanView.js","App.js","index.js"],"names":["initialState","budget","cities","id","name","cost","selectedCityIds","AppContext","createContext","AppReducer","state","action","type","payload","filter","city","AppProvider","props","useReducer","dispatch","Provider","value","children","Header","Navbar","Container","className","Brand","EditBudget","useState","setValue","InputGroup","Text","required","onChange","event","target","Button","variant","onClick","handleSaveClick","Budget","useContext","isEditing","setIsEditing","size","getSelectedCities","includes","getTotalExpenses","selectedCities","reduce","total","City","totalExpenses","selected","alert","BudgetStatus","alertType","navigate","useNavigate","Fragment","length","CityList","notSelectedCities","getUnselectedCities","map","Home","TripCard","Card","Body","Title","tripTitle","tripText","Footer","tripFooter","TripCityGallery","firstImg","setFirstImg","secondImg","setSecondImg","thirdImg","setThirdImg","query","useEffect","axios","get","headers","authorization","process","params","per_page","then","res","data","photos","src","medium","catch","err","console","log","CardGroup","Img","toString","sumArr","backtrack","i","sum","plan","planCities","JSON","parse","stringify","c","days","pick","leave","editCityObjArray","cityArr","Array","from","acc","r","key","current","set","Map","values","createPlanString","resultingCities","planStr","totalCost","createPlanFooterString","totalDays","generatePlanHelper","minCityCost","spentSoFar","spent","TripPlan","plans","firstPlan","obj","Math","min","maxCityCost","max","secondPlan","firstPlanCities","getTotalCostOf","secondPlanCities1","secondPlanCities2","secondPlanCities","thirdPlanCities","generatePlans","firstPlanText","firstPlanFooter","secondPlanText","secondPlanFooter","thirdPlan","thirdPlanText","thirdPlanFooter","PlanView","App","useRoutes","path","element","AppWrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.effc484c.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const initialState = {\r\n\tbudget: 3000,\r\n\tcities: [\r\n        { id: 1, name: 'Paris', cost: 500},\r\n\t\t{ id: 2, name: 'London', cost: 450},\r\n\t\t{ id: 3, name: 'Barcelona', cost: 400},\r\n\t\t{ id: 4, name: 'Madrid', cost: 350},\r\n\t\t{ id: 5, name: 'Rome', cost: 300},\r\n\t\t{ id: 6, name: 'Amsterdam', cost: 250},\r\n\t\t{ id: 7, name: 'Prague', cost: 200},\r\n\t\t{ id: 8, name: 'Brussels', cost: 150},\r\n\t\t{ id: 9, name: 'Budapest', cost: 100},\r\n\t\t{ id: 10, name: 'Istanbul', cost: 50},\r\n\t],\r\n\tselectedCityIds: [],\r\n};\r\n\r\nexport const AppContext = createContext();\r\n","export const AppReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_BUDGET':\r\n            return {\r\n                ...state,\r\n                budget: action.payload,\r\n            };\r\n        case 'ADD_SELECTED_CITY':\r\n            return {\r\n                ...state,\r\n                selectedCityIds: [...state.selectedCityIds, action.payload],\r\n            };\r\n        case 'REMOVE_SELECTED_CITY':\r\n            return {\r\n                ...state,\r\n                selectedCityIds: state.selectedCityIds.filter(city => city !== action.payload),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { useReducer } from \"react\";\r\nimport { AppContext, initialState } from \"./AppContext\";\r\nimport { AppReducer } from \"./AppReducer\";\r\n\r\nexport const AppProvider = (props) => {\r\n\tconst [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider\r\n\t\t\tvalue = {{\r\n\t\t\t\tbudget: state.budget,\r\n\t\t\t\tcities: state.cities,\r\n\t\t\t\tselectedCityIds: state.selectedCityIds,\r\n\t\t\t\tdispatch,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</AppContext.Provider>\r\n\t);\r\n};","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Navbar>\r\n            <Container className=\"header-container\">\r\n                <Navbar.Brand><h2>Trip Planner</h2></Navbar.Brand>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport './Budget.css';\r\n\r\nconst EditBudget = (props) => {\r\n\tconst [value, setValue] = useState(props.budget);\r\n\r\n\treturn (\r\n\t\t<div className=\"edit-budget\">\r\n\t\t\t<InputGroup.Text>$</InputGroup.Text>\r\n\t\t\t<input\r\n\t\t\t\trequired='required'\r\n\t\t\t\ttype='number'\r\n\t\t\t\tclassName='form-control'\r\n\t\t\t\tid='name'\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outline-success\"\r\n\t\t\t\tonClick={() => props.handleSaveClick(value)}>\r\n\t\t\t\tSave\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EditBudget;","import React, { useContext, useState } from 'react'\r\nimport { AppContext } from '../../context/AppContext';\r\nimport EditBudget from './EditBudget';\r\nimport { RiEdit2Fill } from 'react-icons/ri';\r\nimport './Budget.css';\r\n\r\nconst Budget = () => {\r\n    const { budget, dispatch } = useContext(AppContext);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const handleEditClick = () => {\r\n        setIsEditing(true);\r\n    };\r\n    const handleSaveClick = (value) => {\r\n        dispatch({\r\n            type: 'SET_BUDGET',\r\n            payload: value,\r\n        });\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"budget-container\">\r\n            {isEditing ? (\r\n                <EditBudget handleSaveClick={handleSaveClick} budget={budget} />\r\n            ) : (\r\n                <div className='alert alert-secondary show-budget' onClick={handleEditClick}>\r\n                    <span>Budget: ${budget}</span>\r\n                    <RiEdit2Fill size=\"1.75em\" />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Budget\r\n","export const getSelectedCities = (cities, selectedCityIds) =>\r\n    cities.filter(city => selectedCityIds.includes(city.id));\r\n\r\nexport const getUnselectedCities = (cities, selectedCityIds) =>\r\n    cities.filter(city => !selectedCityIds.includes(city.id));\r\n\r\nexport const getTotalExpenses = (selectedCities) =>\r\n    selectedCities.reduce((total, city) => {\r\n        return (total += city.cost);\r\n    }, 0);","import React, { useContext } from 'react'\r\nimport { AppContext } from '../../context/AppContext';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getSelectedCities, getTotalExpenses } from '../../utils/StoreUtils';\r\n\r\nconst City = (props) => {\r\n\tconst { budget, cities, selectedCityIds, dispatch } = useContext(AppContext);\r\n\r\n\tconst selectedCities = getSelectedCities(cities, selectedCityIds);\r\n\tconst totalExpenses = getTotalExpenses(selectedCities);\r\n\r\n\tconst handleAdd = () => {\r\n\t\tif (totalExpenses + props.cost > budget) {\r\n\t\t\talert(\"Above your budget! You cannot add this city.\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'ADD_SELECTED_CITY',\r\n\t\t\t\tpayload: props.id,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleRemove = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'REMOVE_SELECTED_CITY',\r\n\t\t\tpayload: props.id,\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li className='list-group-item d-flex justify-content-between align-items-center'>\r\n\t\t\t{props.selected ?\r\n\t\t\t\t<Button onClick={handleRemove} variant=\"danger\">Remove</Button>\r\n\t\t\t\t: <Button onClick={handleAdd}>Add</Button>}\r\n\t\t\t{props.name}\r\n\t\t\t<div>\r\n\t\t\t\t<span className=\"badge rounded-pill bg-success mx-8\">\r\n\t\t\t\t\t${props.cost}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default City\r\n","import React, { useContext } from 'react'\r\nimport { AppContext } from '../../context/AppContext';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getSelectedCities, getTotalExpenses } from '../../utils/StoreUtils';\r\n\r\nconst BudgetStatus = () => {\r\n    const { budget, cities, selectedCityIds } = useContext(AppContext);\r\n\r\n    const selectedCities = getSelectedCities(cities, selectedCityIds);\r\n\tconst totalExpenses = getTotalExpenses(selectedCities);\r\n    \r\n    const alertType = totalExpenses > budget ? 'alert-danger' : 'alert-success';\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleClick = path => {\r\n        navigate(path);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`alert p-4 ${alertType}`}>\r\n                <span>Remaining: ${budget - totalExpenses}</span>\r\n            </div>\r\n            {budget - totalExpenses >= 0 && selectedCities.length >= 3 &&\r\n                <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                        onClick={() => handleClick('/trip')}\r\n                        className=\"plan-btn\"\r\n                        variant=\"success\"\r\n                        size=\"lg\">\r\n                        Plan Your Trip!\r\n                    </Button>\r\n                </div>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default BudgetStatus\r\n","import React, { useContext } from 'react'\r\nimport City from '../city/City.js'\r\nimport { AppContext } from '../../context/AppContext';\r\nimport BudgetStatus from '../budget-status/BudgetStatus.js';\r\nimport { getSelectedCities, getUnselectedCities } from '../../utils/StoreUtils';\r\n\r\nconst CityList = () => {\r\n    const { cities, selectedCityIds } = useContext(AppContext);\r\n\r\n    const selectedCities = getSelectedCities(cities, selectedCityIds);\r\n    const notSelectedCities = getUnselectedCities(cities, selectedCityIds);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <ul className='list-group'>\r\n                    {selectedCities.map(city => (\r\n                        <City\r\n                            key={city.id}\r\n                            id={city.id}\r\n                            selected={true}\r\n                            name={city.name}\r\n                            cost={city.cost} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <BudgetStatus />\r\n            <ul className='list-group'>\r\n                {notSelectedCities.map(city => (\r\n                    <City\r\n                        key={city.id}\r\n                        id={city.id}\r\n                        selected={false}\r\n                        name={city.name}\r\n                        cost={city.cost} />\r\n                ))}\r\n            </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CityList\r\n","import React from 'react'\r\nimport Header from '../header/Header'\r\nimport Budget from '../budget/Budget'\r\nimport CityList from '../city-list/CityList'\r\nimport Container from 'react-bootstrap/Container';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Container className=\"main-container\">\r\n            <Header />\r\n            <Budget />\r\n            <CityList />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst TripCard = (props) => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{props.tripTitle}</Card.Title>\r\n                <Card.Text>\r\n                    {props.tripText}\r\n                </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <small className=\"text-muted\">{props.tripFooter}</small>\r\n            </Card.Footer>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default TripCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios';\r\n\r\nimport './TripCityGallery.css';\r\n\r\nconst TripCityGallery = (props) => {\r\n\r\n    const [firstImg, setFirstImg] = useState(false);\r\n    const [secondImg, setSecondImg] = useState(false);\r\n    const [thirdImg, setThirdImg] = useState(false);\r\n\r\n    const query = props.name;\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.pexels.com/v1/search`, {\r\n            headers: {\r\n                authorization: process.env.REACT_APP_API_KEY,\r\n            },\r\n            params: {\r\n                query: query,\r\n                per_page: 3,\r\n            }\r\n        })\r\n            .then(res => res.data.photos)\r\n            .then(res => {\r\n                setFirstImg(res[0].src.medium);\r\n                setSecondImg(res[1].src.medium);\r\n                setThirdImg(res[2].src.medium);\r\n            })\r\n            .catch(err => console.log(err))\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h4>{query}</h4>\r\n            <CardGroup className=\"card-group\">\r\n                <Card>\r\n                    <Card.Img className=\"card-img\" variant=\"top\" src={firstImg.toString()} />\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img className=\"card-img\" variant=\"top\" src={secondImg.toString()} />\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img className=\"card-img\" variant=\"top\" src={thirdImg.toString()} />\r\n                </Card>\r\n            </CardGroup>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TripCityGallery\r\n","var sumArr = [];\r\n\r\nfunction backtrack(i, sum, target, plan) {\r\n    let clonedPlan = JSON.parse(JSON.stringify(plan))\r\n    const planCities = clonedPlan.filter(c => c.days > 0);\r\n    sumArr[sum] = planCities;\r\n\r\n    if (sum > target) {\r\n        return 0;\r\n    }\r\n    if (i === plan.length) {\r\n        return sum;\r\n    }\r\n\r\n    plan[i].days++;\r\n    const pick = backtrack(i + 1, sum + plan[i].cost, target, plan);\r\n\r\n    plan[i].days--;\r\n    const leave = backtrack(i + 1, sum, target, plan);\r\n\r\n    if (pick > leave) {\r\n        return pick;\r\n    }\r\n    return leave;\r\n}\r\n\r\nconst editCityObjArray = (cityArr) => {\r\n    return Array.from(cityArr.reduce((acc, { cost, days, ...r }) => {\r\n        const key = JSON.stringify(r);\r\n        const current = acc.get(key) || { ...r, cost: 0, days: 0 };\r\n        return acc.set(key, { ...current, cost: current.cost + cost, days: current.days + days });\r\n    }, new Map()).values());\r\n}\r\n\r\nexport  const createPlanString = (resultingCities) => {\r\n    let planStr = \"\";\r\n    let totalCost = 0;\r\n    for (let i = 0; i < resultingCities.length; i++) {\r\n        planStr += resultingCities[i].days;\r\n        resultingCities[i].days === 1 ? planStr += \" day \" : planStr += \" days \";\r\n        planStr += resultingCities[i].name + \" (\" + resultingCities[i].cost + \" USD)\";\r\n        totalCost += resultingCities[i].cost;\r\n        if (i !== resultingCities.length - 1) planStr += \" + \";\r\n    }\r\n    planStr += \" = \" + totalCost + \" USD\";\r\n    return planStr;\r\n}\r\n\r\nexport  const createPlanFooterString = (resultingCities) => {\r\n    let totalCost = 0;\r\n    let totalDays = 0;\r\n    for (let i = 0; i < resultingCities.length; i++) {\r\n        totalCost += resultingCities[i].cost;\r\n        totalDays += resultingCities[i].days;\r\n    }\r\n    return totalDays + \" days, \" + totalCost + \" USD\";\r\n}\r\n\r\nconst getTotalCostOf = (selectedCities) => {\r\n    let totalCost = 0;\r\n    for (let i = 0; i < selectedCities.length; i++) {\r\n        totalCost += selectedCities[i].cost;\r\n    }\r\n    return totalCost;\r\n}\r\n\r\nexport  const generatePlans = (budget, selectedCities) => {\r\n    let firstPlan = selectedCities.map(obj => ({ ...obj, days: 0 }));    \r\n    let minCityCost = Math.min(...selectedCities.map(c => c.cost));\r\n    let maxCityCost = Math.max(...selectedCities.map(c => c.cost));\r\n    \r\n    let secondPlan = firstPlan.filter((city) => city.cost !== maxCityCost).map(obj => ({ ...obj, days: 0 }));\r\n\r\n    let firstPlanCities = generatePlanHelper(budget, firstPlan, minCityCost);\r\n\r\n    let totalCost = getTotalCostOf(selectedCities);\r\n    let secondPlanCities1 = generatePlanHelper(budget - totalCost, secondPlan, minCityCost);\r\n    let secondPlanCities2 = generatePlanHelper(totalCost, firstPlan, minCityCost);\r\n    let secondPlanCities = editCityObjArray([...secondPlanCities1, ...secondPlanCities2]);\r\n\r\n    let thirdPlanCities = generatePlanHelper(budget, secondPlan, minCityCost);\r\n\r\n    return [[...firstPlanCities], [...secondPlanCities], [...thirdPlanCities]];\r\n}\r\n\r\nconst generatePlanHelper = (budget, plan, minCityCost) => {\r\n    let spentSoFar = 0;\r\n    let resultingCities = [];\r\n    \r\n    while (true) {\r\n        let spent = backtrack(0, 0, budget - spentSoFar, plan);\r\n    \r\n        resultingCities = [...resultingCities, ...sumArr[spent]];\r\n    \r\n        spentSoFar += spent;\r\n    \r\n        if ((budget - minCityCost < spentSoFar) && (spentSoFar <= budget))\r\n            break;\r\n    }\r\n    \r\n    return editCityObjArray(resultingCities);\r\n}","import React, { useContext } from 'react'\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport TripCard from '../trip-card/TripCard';\r\nimport TripCityGallery from '../trip-city-gallery/TripCityGallery';\r\nimport { AppContext } from '../../context/AppContext';\r\nimport { getSelectedCities } from '../../utils/StoreUtils';\r\nimport { generatePlans, createPlanString, createPlanFooterString } from '../../utils/PlanUtils';\r\n\r\nconst TripPlan = () => {\r\n\r\n    const { budget, cities, selectedCityIds } = useContext(AppContext);\r\n    const selectedCities = getSelectedCities(cities, selectedCityIds);\r\n\r\n    const plans = generatePlans(budget, selectedCities);\r\n\r\n    const firstPlan = plans[0];\r\n    const firstPlanText = createPlanString(firstPlan);\r\n    const firstPlanFooter = createPlanFooterString(firstPlan);\r\n\r\n    const secondPlan = plans[1];\r\n    const secondPlanText = createPlanString(secondPlan);\r\n    const secondPlanFooter = createPlanFooterString(secondPlan);\r\n\r\n    const thirdPlan = plans[2];\r\n    const thirdPlanText = createPlanString(thirdPlan);\r\n    const thirdPlanFooter = createPlanFooterString(thirdPlan);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>Here are your travel plans!</div>\r\n            <CardGroup>\r\n                <TripCard\r\n                    tripTitle=\"Plan 1\"\r\n                    tripText={firstPlanText} \r\n                    tripFooter={firstPlanFooter}/>\r\n                <TripCard\r\n                    tripTitle=\"Plan 2\"\r\n                    tripText={secondPlanText}\r\n                    tripFooter={secondPlanFooter}/>\r\n                <TripCard\r\n                    tripTitle=\"Plan 3\"\r\n                    tripText={thirdPlanText}\r\n                    tripFooter={thirdPlanFooter}/>\r\n            </CardGroup>\r\n            <div>\r\n                {selectedCities.map(city => (\r\n                    <TripCityGallery\r\n                        key={city.id}\r\n                        name={city.name} />\r\n                ))}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TripPlan\r\n","import React from 'react'\r\nimport Header from '../header/Header'\r\nimport TripPlan from '../trip-plan/TripPlan'\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst PlanView = () => {\r\n    return (\r\n        <Container className=\"main-container\">\r\n            <Header />\r\n            <TripPlan />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PlanView\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  useRoutes,\r\n} from \"react-router-dom\";\r\nimport { AppProvider } from './context/AppProvider';\r\nimport Home from './components/home/Home'\r\nimport PlanView from './components/plan-view/PlanView'\r\n\r\nconst App = () => {\r\n  let routes = useRoutes([\r\n    { path: \"/\", element: <Home /> },\r\n    { path: \"/trip\", element: <PlanView /> },\r\n  ]);\r\n  return routes;\r\n};\r\n\r\nconst AppWrapper = () => {\r\n  return (\r\n    <AppProvider>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </AppProvider>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}